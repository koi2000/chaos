CA FE BA BE // 魔数
00 00 // 次版本
00 34 // 主版本号 52 对应JDK8
00 13 // 常量池计数器 19 （共有18个常量）

// 一旦有一个类想要初始化，必须先初始化他的父类
0A //第一个常量 值为10 constant_method_ref
00 04 // 指向第4个常量
00 0F // 指向第15个常量


09 // 第二个常量 CONSTANT_FIELDREF_INFO
00 03
00 10

07 // 第三个常量 CONSTANT_class_info
00 11 //指向第17个常量

07 // 第四个常量
00 12

01 //第五个常量 CONSTANT_UTF8_info
00 04 // 长度，字符串的长度
6E 61 6D 65 // 转为字符串为name

01 // 第六个常量
00 12 // 长度为18
4C 6A 61 76  61 2F 6C 61 6E 67 2F 53 74 72 69 6E 67 3B // Ljava/lang/string

01 // 第七个常量
00 06
3C 69 6E 69 74 3E // init方法

01
00 03
28 29 56 // 返回值void

01 // 第九个常量
00 04 //
43 6F 64 65 // code属性

01
00 0F // 一共十五个长度的字符串
4C 69 6E 65 4E 75 6D 62 65  72 54 61 62 6C 65 // LineNumberTable 代表代码的行号，方便抛异常时错误栈行号

01
00 07
67 65 74 4E 61 6D 65 // getName 方法名

字面量=看上去是啥就存啥

01
00 14
28 29 4C 6A 61 76 61 2F 6C 61 6E 67 2F  53 74 72 69 6E 67 3B //Ljava/lang/string

01
00 0A
53 6F 75 72 63 65  46 69 6C 65 // SourceFile（源文件标识）

01
00 0D
6A 76 6D 43 6C 61 73 73 2E  6A 61 76 61 // jvmClass.java 真正的文件名称

0C // 第十五个常量 CONSTANT_NameAndType
00 07 // 指向第七个常量 init
00 08 // 指向第八个常量 void返回值

0C （有一个常量，名称叫string，类型是Ljava/lang/string）
00 05 // 指向第五个常量 name
00 06 // 指向第六个常量 Ljava/lang/string

01
00 15
63 6F 6D 2F 6A 76 6D 43 6C 61 73 73 2F 6A 76  6D 43 6C 61 73 73 // 全包名+类名 com/jvmClass/jvmClass

01 // 第十八个常量
00 10
6A 61 76 61 2F 6C 61  6E 67 2F 4F 62 6A 65 63 74 // java/lang/Object

00 21 // 访问标志 ACC_PUBLIC + ACC_SUPER
00 03 // 类索引 指向第三个常量 jvmClass
00 04 // 父索引指向第四个常量 Object

00 00 // 没有实现任何接口
00 01 // 字段表计数器，只有一个字段
00 02 // private
00 05 // 指向第五个常量 name
00 06 // 指向第六个常量 Ljava/lang/string
00 00 // 没有其他属性

00 02 // 方法表计数器 有两个方法（init getName）
00 01 // public
00 07 // 指向第七个常量
00 08 // 指向第八个常量
00 01 // 有一个属性（code属性）
00 09 // 指向第九个常量
00 00 00 1D // 长度是1D = 29
00 01 // 最大栈深度
00 01 // 最大局部变量表槽的数量
00 00 00 05 // 代表编译后所生成的 JVM 指令码的长度

2A //aload_0 指令 将第一个指令压入栈
B7 // invokespecial，调用所引用对象的构造方法
00 01 // 调用第一个方法
B1 // return指令

00 00 // 异常信息为空
00 01 // Code属性有一个
00 0A // 指向第十个常量 代码行号
00 00 00 06 // 属性长度为6
00 01 // 有一个属性
00 00 // 字节码行号
00 07 // 代码行号

00 01 // public
00 0B // 指向第十一个常量 getName
00 0C // 指向第十二个 返回值
00 01 // 一个属性
00 09 // 第九个常量
00 00 00 1D // 29个产嘀咕
00 01 // 最大max stack
00 01 // 最大的slots
00 00 00 05 //五个jvm指令码
2A // aload_0 指令，将第一个属性压入栈中
B4 //getfield指令 我们这个方法是为了获取name并return
00 02 // 指向第二个常量
B0 // areturn 返回对象的引用

00 00 // 异常信息为空
00 01 // code属性有一个
00 0A // 只想第十个常量
00 00 00 06 // 属性长度为6
00 01 // 有一个属性
00 00 // 字节码的行号
00 0B // 代码行号

00 01 // 属性表计数器，一个属性
00 0D // 指向第十三个常量
00 00 00 02 // 2个属性
00 0E